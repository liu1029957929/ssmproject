<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.atcrowdfunding.potal.dao.TicketMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="memberid" jdbcType="INTEGER" property="memberid" />
    <result column="piid" jdbcType="VARCHAR" property="piid" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="authcode" jdbcType="CHAR" property="authcode" />
    <result column="pstep" jdbcType="VARCHAR" property="pstep" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginacct, userpswd, username, email, authstatus, usertype, realname, cardnum, 
    accttype
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from t_ticket
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>




  <select id="queryTickByMemberid" resultMap="BaseResultMap">
    select id,memberid,piid,status,authcode,pstep
    from t_ticket
    where memberid = #{id} and status='0'
  </select>

  <insert id="insertTicket">
    insert into t_ticket (memberid,status,pstep) values (#{memberid},#{status},#{pstep})
  </insert>

  <update id="updateTicket">
    update t_ticket set pstep=#{pstep} where id=${id}
  </update>

  <update id="updateTicket2">
    update t_ticket set piid=#{piid},authcode=#{authcode},pstep=#{pstep} where id=${id}
  </update>


  <update id="updateTicketByMemberId">
    update t_ticket set status='1' where memberid=#{memberid} and status='0'
  </update>
</mapper>